# ------------------------------------------------------------------------------
#              -= Arno's Iptables Firewall(AIF) - SIP-VOIP plugin =-
#
PLUGIN_NAME="SIP-VOIP plugin"
PLUGIN_VERSION="0.32BETA"
PLUGIN_CONF_FILE="sip-voip.conf"
#
# Last changed          : June 13, 2017
# Requirements          : AIF 2.0.0+ and ip_conntrack_sip
# Comments              : This plugin will allow/enable SIP (VOIP) support
#
# Author                : (C) Copyright 2010-2017 by Arno van Amersfoort
# Credits               : Philip Prindeville for his initial idea
# Web                   : https://github.com/arno-iptables-firewall/aif
# Email                 : a r n o DOT v a n DOT a m e r s f o o r t AT g m a i l DOT c o m
#                         (note: you must remove all spaces and substitute the @ and the .
#                         at the proper locations!)
# ------------------------------------------------------------------------------
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# ------------------------------------------------------------------------------

# Plugin start function
plugin_start()
{
  local port ports="" host IFS

  if [ -z "$SIP_VOIP_PORTS" ]; then
    SIP_VOIP_PORTS="5060"
  fi

  if [ -z "$SIP_VOIP_REMOTE_HOSTS" ]; then
    SIP_VOIP_REMOTE_HOSTS="0/0"
  fi

  # Some required modules are already loaded by the main script:
  modprobe_multi nf_nat ip_nat

  echo "${INDENT}Using SIP UDP for $SIP_VOIP_REMOTE_HOSTS (INET) to port(s): $SIP_VOIP_PORTS"

  # We need the SIP module loaded of course
  IFS=' ,'
  for port in $SIP_VOIP_PORTS; do
    # Check for kernel 2.6.25 or newer
    if kernel_ver_chk 2 6 25; then
      ports="${ports:-ports=}${ports:+,}$port"
    else
      ports="$ports${ports:+ }ports=$port"
    fi
  done

  IFS=' '
  if ! modprobe nf_conntrack_sip $ports >/dev/null 2>&1; then
    modprobe ip_conntrack_sip $ports
  fi

  # Load the SIP NAT module only when required
  if [ "$NAT" = "1" ]; then
    modprobe_multi nf_nat_sip ip_nat_sip
  fi

  if ip4tables -nL CONNTRACK_HELPER >/dev/null 2>&1; then
    iptables -A CONNTRACK_HELPER -m conntrack --ctstate RELATED -m helper --helper sip -j ACCEPT

    IFS=' ,'
    for port in $SIP_VOIP_PORTS; do
      iptables -t raw -A PREROUTING -p udp --dport $port -j CT --helper sip
    done
  fi

  IFS=' ,'
  for host in $SIP_VOIP_REMOTE_HOSTS; do
    for port in $SIP_VOIP_PORTS; do
      iptables -A EXT_INPUT_CHAIN -s $host -p udp --dport $port -j ACCEPT
    done
  done

  return 0
}


# Plugin stop function
plugin_stop()
{
  return 0
}


# Plugin status function
plugin_status()
{
  return 0
}

# Sanity check environment before actual start
plugin_sanity_check()
{
  return 0
}


############
# Mainline #
############

# Check where to find the config file
CONF_FILE=""
if [ -n "$PLUGIN_CONF_PATH" ]; then
  CONF_FILE="$PLUGIN_CONF_PATH/$PLUGIN_CONF_FILE"
fi

# Preinit to success:
PLUGIN_RET_VAL=0

# Check if the config file exists
if [ ! -f "$CONF_FILE" ]; then
  printf "NOTE: Config file \"$CONF_FILE\" not found!\n        Plugin \"$PLUGIN_NAME v$PLUGIN_VERSION\" ignored!\n" >&2
else
  # Source the plugin config file
  . "$CONF_FILE"

  if [ "$ENABLED" = "1" ] ||
     [ -n "$PLUGIN_LOAD_FILE" -a "$PLUGIN_CMD" = "stop" ] ||
     [ -n "$PLUGIN_LOAD_FILE" -a "$PLUGIN_CMD" = "status" ]; then
    # Show who we are:
    echo "${INDENT}$PLUGIN_NAME v$PLUGIN_VERSION"

    # Increment indention
    INDENT="$INDENT "

    # Only proceed if environment ok
    if ! plugin_sanity_check; then
      PLUGIN_RET_VAL=1
    else
      case $PLUGIN_CMD in
        start|'') plugin_start; PLUGIN_RET_VAL=$? ;;
        stop    ) plugin_stop; PLUGIN_RET_VAL=$? ;;
        status  ) plugin_status; PLUGIN_RET_VAL=$? ;;
        *       ) PLUGIN_RET_VAL=1; printf "\033[40m\033[1;31m${INDENT}ERROR: Invalid plugin option \"$PLUGIN_CMD\"!\033[0m\n" >&2 ;;
      esac
    fi
  fi
fi
