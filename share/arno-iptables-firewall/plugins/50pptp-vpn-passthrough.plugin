# ------------------------------------------------------------------------------
#       -= Arno's Iptables Firewall(AIF) - PPTP VPN Passthrough plugin =-
#
PLUGIN_NAME="PPTP VPN Passthrough plugin"
PLUGIN_VERSION="1.01"
PLUGIN_CONF_FILE="pptp-vpn-passthrough.conf"
#
# Last changed          : June 15, 2017
# Requirements          : AIF 2.0.0+ and ip_nat_pptp
# Comments              : This plugin loads the required kernel modules for PPTP VPN Clients
#                         to access remote PPTP VPN Server(s) when NAT is enabled.
#
# Author                : (C) Copyright 2016-2017 by Lonnie Abelbeck & Arno van Amersfoort
# Web                   : https://github.com/arno-iptables-firewall/aif
# Email                 : a r n o DOT v a n DOT a m e r s f o o r t AT g m a i l DOT c o m
#                         (note: you must remove all spaces and substitute the @ and the .
#                         at the proper locations!)
# ------------------------------------------------------------------------------
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# ------------------------------------------------------------------------------

# Plugin start function
plugin_start()
{

  if [ "$NAT" = "1" ]; then
    echo "${INDENT}Enable PPTP NAT helper module"
    modprobe_multi nf_nat_pptp ip_nat_pptp

    if ip4tables -nL CONNTRACK_HELPER >/dev/null 2>&1; then
      ip4tables -A CONNTRACK_HELPER -m conntrack --ctstate RELATED -m helper --helper pptp -j ACCEPT
      ip4tables -t raw -A PREROUTING -p tcp --dport 1723 -j CT --helper pptp
    fi
  else
    echo "${INDENT}ERROR: NAT is not enabled, this plugin will be ignored."
  fi

  return 0
}


# Plugin restart function
plugin_restart()
{

  # Skip plugin_stop on a restart
  plugin_start

  return 0
}


# Plugin stop function
plugin_stop()
{

  if [ "$NAT" = "1" ]; then
    if [ -e /proc/modules -a -x "$MODPROBE" ]; then
      if ! $MODPROBE -r nf_nat_pptp >/dev/null 2>&1; then
        $MODPROBE -r ip_nat_pptp >/dev/null 2>&1
      fi
      if [ $? -eq 0 ]; then
        echo "${INDENT}Disabled PPTP NAT helper module"
      fi
    fi
  fi

  return 0
}


# Plugin status function
plugin_status()
{
  return 0
}


# Check sanity of eg. environment
plugin_sanity_check()
{
  return 0
}


############
# Mainline #
############

# Check where to find the config file
CONF_FILE=""
if [ -n "$PLUGIN_CONF_PATH" ]; then
  CONF_FILE="$PLUGIN_CONF_PATH/$PLUGIN_CONF_FILE"
fi

# Preinit to success:
PLUGIN_RET_VAL=0

# Check if the config file exists
if [ ! -f "$CONF_FILE" ]; then
  printf "NOTE: Config file \"$CONF_FILE\" not found!\n        Plugin \"$PLUGIN_NAME v$PLUGIN_VERSION\" ignored!\n" >&2
else
  # Source the plugin config file
  . "$CONF_FILE"

  if [ "$ENABLED" = "1" -a "$PLUGIN_CMD" != "stop-restart" ] ||
     [ "$ENABLED" = "0" -a "$PLUGIN_CMD" = "stop-restart" ] ||
     [ -n "$PLUGIN_LOAD_FILE" -a "$PLUGIN_CMD" = "stop" ] ||
     [ -n "$PLUGIN_LOAD_FILE" -a "$PLUGIN_CMD" = "status" ]; then
    # Show who we are:
    echo "${INDENT}$PLUGIN_NAME v$PLUGIN_VERSION"

    # Increment indention
    INDENT="$INDENT "
    
    # Only proceed if environment ok
    if ! plugin_sanity_check; then
      PLUGIN_RET_VAL=1
    else
      case $PLUGIN_CMD in
        start|'') plugin_start; PLUGIN_RET_VAL=$? ;;
        restart ) plugin_restart; PLUGIN_RET_VAL=$? ;;
        stop|stop-restart) plugin_stop; PLUGIN_RET_VAL=$? ;;
        status  ) plugin_status; PLUGIN_RET_VAL=$? ;;
        *       ) PLUGIN_RET_VAL=1; printf "\033[40m\033[1;31m${INDENT}ERROR: Invalid plugin option \"$PLUGIN_CMD\"!\033[0m\n" >&2 ;;
      esac
    fi
  fi
fi
